version: "3.8"

services:
  web:
    image: aws-app-web:latest
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - aws-app-dev-network

  backend:
    image: aws-app-backend:latest
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-devpass}@postgres:5432/${POSTGRES_DB:-aws_app_dev}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-jwt-secret-32-characters-minimum}
      - SESSION_SECRET=${SESSION_SECRET:-dev-session-secret-32-characters-min}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - aws-app-dev-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "const http = require('http'); const req = http.request({ hostname: 'localhost', port: 3001, path: '/api/health', method: 'GET' }, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpass}
      POSTGRES_DB: ${POSTGRES_DB:-aws_app_dev}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - aws-app-dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_dev_data:/data
    networks:
      - aws-app-dev-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  aws-app-dev-network:
    driver: bridge
